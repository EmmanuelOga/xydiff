ARCH := $(shell uname)

GCC             ?= /usr/bin/g++
XML4C_DIR       ?= /usr/local
ICU_DIR         ?= /xyleme/tools/icu-2.1/GCC3_Linux

#XERCES_LIBS    = -licui18n -licuuc -licudata -lustdio -lxerces-c 
XERCES_LIBS    = -lxerces-c 

XERCES_INCLUDES = -I$(XML4C_DIR)/include -I$(ICU_DIR)/include -I$(XML4C_DIR)/include/xercesc/dom/deprecated -I$(XML4C_DIR)/include/xercesc/util -I$(XML4C_DIR)/include/xercesc/dom/ -I$(XML4C_DIR)/include/xercesc/internet/
XERCES_LIB_PATH = -L$(XML4C_DIR)/lib -L$(ICU_DIR)/lib

DEPFILE = .depend

MKDIR = mkdir -p

#localtime_r() like functions
EXTRA_COMPILE_OPTIONS += -D_REENTRANT -D_PTHREADS -DUSE_GCC3

export CFLAGS='-O3 -arch x86_64'
export LDFLAGS='-O3 -arch x86_64'
export CXXFLAGS='-O3 -arch x86_64' 
# Debug
EXTRA_COMPILE_OPTIONS += -Wall -g -fPIC -O3 -arch x86_64

# Profiler <gprof>
# EXTRA_COMPILE_OPTIONS += -pg

# Optimize a bit
EXTRA_COMPILE_OPTIONS += -O3

LIBRARY_PATH  += $(XERCES_LIB_PATH)
LIBRARY_NAMES += $(XERCES_LIBS)

INCLUDES      += -D__MYARCH__$(ARCH)
INCLUDES      += -I..
INCLUDES      += -I./include-fake
INCLUDES      += $(XERCES_INCLUDES)


ALL_EXES := $(foreach e,$(EXES),$(TARGETS_DIR)/$(e))

TARGETS_DIR = bin
LIB       = ${TARGETS_DIR}/libXyDelta.so
EXEC_DIR := .

ALL_OBJS := $(foreach l,$(EXES), $($(l)_LOC_OBJS))
ALL_SRCS := $(ALL_OBJS:.o.cpp)

.SUFFIXES: .cc .o .hh .cpp .hpp

%.o: .cpp
	@echo "	Compile $(<F)"
	$(GCC) -c $(INCLUDES) $(EXTRA_COMPILE_OPTIONS) -o $(@) $(<)

all:
	$(MAKE) depend
	$(MAKE) ${LIB}
	$(MAKE) executables

executables: $(EXES)

$(TARGETS_DIR)/%: $(DEPEND)
	@echo "Building Target $@"
	$(MKDIR) $(TARGETS_DIR)
	$(GCC)  -O3 -arch x86_64 ${ALLLIBS} $^ -o $@ ${LIBRARY_PATH} ${LIBRARY_NAMES}

echo_build_%:
	@echo "Building" $(*)

${LIB}: ${COMMON_OBJECTS}
	$(MKDIR) $(TARGETS_DIR)
	@echo "Building Library $@"
	$(GCC) -dynamiclib -O3 -arch x86_64 -lxerces-c  ${LIBRARY_PATH} -o $@ ${ALLLIBS} $^ 

$(EXES):
	@echo "	Spawn Make for $@"
	$(MAKE) -f Make.xydiff $(TARGETS_DIR)/$@ DEPEND="$($@_LOC_OBJS)"
	
$(DEPFILE):
	@echo "Computing dependencies "
	$(GCC) -MM $(INCLUDES) $(EXTRA_COMPILE_OPTIONS)  .cpp >  $(DEPFILE)
        
depend: $(DEPFILE)

clean:
	@echo "Cleaning object files"
	${RM} $(ALL_OBJS)
	@echo "Cleaning $(ALL_EXES)"
	${RM} $(ALL_EXES)
	
distclean: clean
	${RM} $(DEPFILE)
	${RM} -Rf $(TARGETS_DIR)
	mkdir $(TARGETS_DIR)

ifneq (${MAKECMDGOALS}, distclean)
ifneq (${MAKECMDGOALS}, clean)
ifneq (${MAKECMDGOALS}, $(DEPFILE))
ifneq (${MAKECMDGOALS}, depend)
ifneq (${MAKECMDGOALS}, default)

include $(DEPFILE)

endif
endif
endif
endif
endif

